@page "/Wallets/{walletId}/Transactions/Details/{transactionId}"
@using BTCPayServer.Lightning
@model LNblitz.Pages.Transactions.DetailsModel

@{
    Model.SetTitle(Model.Transaction.Description);
}

<header class="d-flex align-items-center justify-content-between mb-3">
    <h1>@ViewData["Title"]</h1>
    <div>
        <a asp-page="./Edit" asp-route-walletId="@Model.WalletId" asp-route-transactionId="@Model.Transaction.TransactionId" class="btn btn-sm btn-outline-secondary d-inline-flex align-items-center mx-1">
            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-pencil mr-1" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z"/>
                <path fill-rule="evenodd" d="M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z"/>
            </svg>
            Edit
        </a>
    </div>
</header>

<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Transaction.Amount)
        </dt>
        <dd class="col-sm-10">
            @Model.Transaction.Amount.ToUnit(LightMoneyUnit.Satoshi)
            sats
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Transaction.AmountSettled)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Transaction.AmountSettled != null)
            {
                <span class="text-@(Model.Transaction.AmountSettled > 0 ? "success" : "danger")">
                    @Model.Transaction.AmountSettled.ToUnit(LightMoneyUnit.Satoshi) sats
                </span>
            }
            else
            {
                <span class="text-muted">
                    @Html.DisplayFor(t => Model.Transaction.Status)
                </span>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Transaction.PaymentRequest)
        </dt>
        <dd class="col-sm-10 text-break">
            @Html.DisplayFor(model => model.Transaction.PaymentRequest)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Transaction.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Transaction.Status)
        </dd>
        @if (Model.Transaction.PaidAt != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Transaction.PaidAt)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Transaction.PaidAt)
            </dd>
        }
        else
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Transaction.ExpiresAt)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Transaction.ExpiresAt)
            </dd>
        }
    </dl>
</div>

<p>
    <a asp-page="/Wallets/Index" asp-route-walletId="@Model.WalletId" class="text-secondary">Back to Wallet</a>
</p>
